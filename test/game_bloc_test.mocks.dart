// Mocks generated by Mockito 5.4.5 from annotations
// in quiz_engine_core/test/game_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:quiz_engine_core/src/asset_provider.dart' as _i2;
import 'package:quiz_engine_core/src/business_logic/quiz_data_provider.dart'
    as _i3;
import 'package:quiz_engine_core/src/random_item_picker.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAssetProvider_0 extends _i1.SmartFake implements _i2.AssetProvider {
  _FakeAssetProvider_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [QuizDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuizDataProvider extends _i1.Mock
    implements _i3.QuizDataProvider<String> {
  @override
  _i2.AssetProvider get provider =>
      (super.noSuchMethod(
            Invocation.getter(#provider),
            returnValue: _FakeAssetProvider_0(
              this,
              Invocation.getter(#provider),
            ),
            returnValueForMissingStub: _FakeAssetProvider_0(
              this,
              Invocation.getter(#provider),
            ),
          )
          as _i2.AssetProvider);

  @override
  String Function(Map<String, dynamic>) get fromJson =>
      (super.noSuchMethod(
            Invocation.getter(#fromJson),
            returnValue:
                (Map<String, dynamic> __p0) =>
                    _i4.dummyValue<String>(this, Invocation.getter(#fromJson)),
            returnValueForMissingStub:
                (Map<String, dynamic> __p0) =>
                    _i4.dummyValue<String>(this, Invocation.getter(#fromJson)),
          )
          as String Function(Map<String, dynamic>));

  @override
  _i5.Future<List<String>> provide() =>
      (super.noSuchMethod(
            Invocation.method(#provide, []),
            returnValue: _i5.Future<List<String>>.value(<String>[]),
            returnValueForMissingStub: _i5.Future<List<String>>.value(
              <String>[],
            ),
          )
          as _i5.Future<List<String>>);
}

/// A class which mocks [RandomItemPicker].
///
/// See the documentation for Mockito's code generation for more information.
class MockRandomItemPicker extends _i1.Mock
    implements _i6.RandomItemPicker<String> {
  @override
  List<String> get items =>
      (super.noSuchMethod(
            Invocation.getter(#items),
            returnValue: <String>[],
            returnValueForMissingStub: <String>[],
          )
          as List<String>);

  @override
  int get count =>
      (super.noSuchMethod(
            Invocation.getter(#count),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  void replaceItems(List<String>? newItems) => super.noSuchMethod(
    Invocation.method(#replaceItems, [newItems]),
    returnValueForMissingStub: null,
  );
}
