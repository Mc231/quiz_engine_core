// Mocks generated by Mockito 5.4.5 from annotations
// in quiz_engine_core/test/game_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:quiz_engine_core/src/model/question_entry.dart' as _i3;
import 'package:quiz_engine_core/src/random_item_picker.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [RandomItemPicker].
///
/// See the documentation for Mockito's code generation for more information.
class MockRandomItemPicker extends _i1.Mock implements _i2.RandomItemPicker {
  @override
  List<_i3.QuestionEntry> get items =>
      (super.noSuchMethod(
            Invocation.getter(#items),
            returnValue: <_i3.QuestionEntry>[],
            returnValueForMissingStub: <_i3.QuestionEntry>[],
          )
          as List<_i3.QuestionEntry>);

  @override
  int get count =>
      (super.noSuchMethod(
            Invocation.getter(#count),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  void replaceItems(List<_i3.QuestionEntry>? newItems) => super.noSuchMethod(
    Invocation.method(#replaceItems, [newItems]),
    returnValueForMissingStub: null,
  );
}
